name: Build Head

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build artifact
    runs-on: ubuntu-20.04
    outputs:
      commit-hash: ${{ steps.get_head.outputs.hash }}
    steps:
      # Set up
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install apt dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake fuse3 libfuse3-dev pkg-config curl zip unzip tar
      - name: Get current commit hash
        id: get_head
        run: echo "::set-output name=hash::$( git rev-parse HEAD )"
      - name: Get vcpkg commit hash
        id: get_vcpkg
        run: echo "::set-output name=hash::$( git submodule status ./vcpkg_files | awk '{print $1}' )"
      - name: Cache vcpkg
        id: cache_vcpkg
        uses: actions/cache@v2
        with:
          path: ./vcpkg_files
          key: ${{ runner.os }}-${{ steps.get_vcpkg.outputs.hash }}
      - name: Initialize repository
        if: steps.cache_vcpkg.outputs.cache-hit != 'true'
        run: make init

      # Build
      - name: Configure CMake
        run: make configure
      - name: Build project
        run: make build

      # Save results
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            ./build/redisfs
            ./build/redisfs_test

  test:
    name: Run tests
    needs: build
    runs-on: ubuntu-20.04
    steps:
      # Set up
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: binaries
      - name: Fix file permisssions
        run: chmod 0755 ./binaries/*

      # Run tests
      - name: Run tests
        run: timeout --verbose 1m ./binaries/redisfs_test

      # Clean up if aborting
      - name: Delete artifacts
        if: failure()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: binaries

  commit:
    name: Commit results
    needs: 
      - build
      - test
    runs-on: ubuntu-20.04
    steps:
      # Set up
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          ref: binaries # Release binaries branch
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: binaries
      - name: Fix file permisssions
        run: chmod 0755 ./binaries/*

      # Commit results
      - name: Configure git commiter identity
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Commit result
        run: |
          git add ./binaries/*
          git diff-index --quiet HEAD || git commit -m "Compiled binaries for commit ${{ needs.build.outputs.commit-hash }}"
          git push origin binaries

      # Clean up
      - name: Delete artifacts
        if: always()
        uses: geekyeggo/delete-artifact@v1
        with:
          name: binaries
